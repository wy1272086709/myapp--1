<script>
import http from './common/http.js';
import util from './common/util.js';
let debug = true;

export default {
	onLaunch: function() {
		let s1 = new Date();
		console.log('Launch start1:', s1.getTime());
		//#ifdef APP-PLUS
		plus.screen.lockOrientation('portrait'); //锁死屏幕方向为竖屏  
		
		//#endif
		
		let _self = this;
		console.log('on Launch!');
		uni.getSystemInfo({
		      success: res => {
				console.log('res', res);
		        let modelmes = res.model;
				let platform = res.platform.toLowerCase();
				//android: 安卓, ios: IOS, devtools:PC
				if (platform == 'android') {
					_self.globalData.platform = 1;	
				} else if(platform == 'ios' || platform == 'devtools' ){
					_self.globalData.platform = 2;
				}
		        if (modelmes.search('iPhone X') != -1 || modelmes.search('iPhoneX')!=-1) {
		          _self.globalData.isIphoneX = true;
		        }
				 //console.log('App Launch')
				switch (platform) {
					case 'android':
						//console.log('运行Android上') 
						plus.navigator.closeSplashscreen();
						break;
					case 'ios':
						//console.log('运行iOS上') 
						plus.navigator.closeSplashscreen();
						break;
					default:
						//console.log('运行在开发者工具上') 
						break;
				}
		        uni.setStorageSync('modelmes', modelmes)
		      }
		});
		this.checkAppUpdate();
	},
	methods:{
		async checkAppUpdate() {
			// #ifdef APP-PLUS
			plus.runtime.getProperty(plus.runtime.appid, async (widgetInfo) => {
				const p = this.globalData.platform;
				const url = this.globalData.serverUri;
				const auth = this.globalData.auth;
				const suffix = '?mod=bb&ac=check_version';
				const res = await http.request(  
					url+suffix,
					{  
						auth: auth,
						bbh:  widgetInfo.version, // 应用版本号 （资源包版本）                
						cid: p,
						filterData: true
					}   
				);  
				console.log('result'+JSON.stringify(res));
				if (res.version) {
					const v = parseInt(res.version)*100;
					// 小于最新的版本号，升级
					if (parseInt(widgetInfo.versionCode)<v && res.sfgx == 1) {
						console.log('result');
					// 版本号判断,是否低于最高版本,如果低于,则需要安装
						this.downloadApp(res.downurl);
					}
				}
			});   
			// #endif
		},
		downloadApp(path) {
			//const data = res.data;
			const data = {
				path:     path
			};
			const _self = this;
			uni.showModal({
				title: '提示',
				content:'检测到最新包,是否升级到最新版本?',
				complete(res) {
					if (res.confirm) {
						uni.showLoading({
							title: '更新中...',
							mask: true
						})
						_self.confirmDownload(data);
					}
				}
			});
		},
		confirmDownload(data) {
			const p = this.globalData.platform;
			// 更新包
			if (p == 1) {
				console.log('data.data.path',data.path)
				uni.downloadFile({ // 下载资源包
					url: data.path,  
					success: (downloadResult) => { 
						console.log('downloadResult',downloadResult)
						if (downloadResult.statusCode === 200) {  
							plus.runtime.install(downloadResult.tempFilePath, { // 安装资源包 
								force: true  
							}, () => {  
								console.log('install success...');  
								uni.hideLoading();
								plus.runtime.restart(); // 重启APP  									
							}, (e) => {  
								console.error('install fail...');  
							});  
						}  
					}  
				}); 
			} else {
				// IOS 包,跳转到应用市场
				plus.runtime.openURL(data.path);
			}
			
		}
	},
	onShow: function() {	
		//#ifdef APP-PLUS
		this.checkAppUpdate();
		//#endif
	},
	onHide: function() {
		console.log('App Hide');
	},
	globalData: {
		//serverUri: "https://www.kuwoi.com/index.php",
		serverUri: "https://kuxou.com/index.php",
		hostUrl: 'https://kuxou.com',
		isRecharge: 0, // 是否通过充值返回个人中心...
		auth: '376b66f9bedd4622522dce742adaaebc',
		platform: 0,
		// APP 手机号登录默认为1,
		// APP 微信登录默认为2,QQ登录默认为3
		appLoginType: 1
	}
};
</script>

<style lang="scss">
@import "uview-ui/index.scss";

/* 解决头条小程序组件内引入字体不生效的问题 */
/* #ifdef MP-TOUTIAO */
@font-face {
	font-family: uniicons;
	src: url('/static/uni.ttf');
}
/* #endif */



</style>
